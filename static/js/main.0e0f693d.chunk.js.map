{"version":3,"sources":["assets/noPosterSmall.png","Components/Wrapper.js","Components/Section.js","Components/Message.js","Components/Poster.js","Components/Loader.js","Components/PageIntro.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","assets/icon-imdb.svg","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","assets/clapperboard.svg","assets/tv.svg","assets/loupe.svg","Components/Header.js","Components/Footer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","strong","Grid","Section","title","children","Text","span","props","color","Error","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","role","aria-label","length","substring","LoadFrame","keyframes","Load","h1","Content","p","PageIntro","content","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_date","Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","searchApi","HomeContainer","state","data","results","this","setState","window","scrollTo","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","SearchContainer","Form","form","Input","input","TypingText","ul","Keyword","a","SearchResult","SearchPresenter","movieResults","showResults","keyWordResults","searchTerm","updateTerm","handleSubmit","clickKeyword","onSubmit","placeholder","value","onChange","keyword","index","onClick","name","event","preventDefault","searchByTerm","target","searchByKeyword","innerText","HeadContent","Backdrop","bgImage","Data","DataInner","h3","ItemContainer","Item","Overview","SubContent","SubTitle","h4","Video","Creators","Creator","profileImage","CompanyContainer","Companies","Company","li","logoimage","Seasons","Season","SwiperCore","use","Pagination","DetailPresenter","result","backdrop_path","last_air_date","runtime","number_of_seasons","genres","genre","className","href","imdb_id","src","iconImdb","production_countries","country","overview","videos","loop","spaceBetween","slidesPerView","pagination","video","key","frameBorder","allow","allowFullScreen","created_by","creator","profile_path","production_companies","company","logo_path","seasons","season","air_date","DetailContainer","pathname","location","includes","match","push","history","parseId","parseInt","isNaN","HeadeContainer","header","List","current","movieImg","tvImg","searchImg","$Link","Link","withRouter","FooterContainer","Links","Copy","Footer","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e0f693d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    margin-left:50px; padding:50px 20px 100px\r\n`;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {margin-bottom:50px}\r\n`;\r\nconst Title = styled.strong`\r\n    font-weight:700; font-size:22px;\r\n`;\r\nconst Grid = styled.div`\r\n    display:grid; grid-template-columns:repeat(6, 1fr); grid-gap:25px; margin-top:25px\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n    ])\r\n  };\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display:flex; width:100%; height:50vh; justify-content:center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color:${props => props.color}; vertical-align:middle\r\n`;\r\n\r\nconst Error = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nError.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Error;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    line-height:1.4; font-size:12px\r\n`;\r\n\r\nconst Image = styled.div`\r\n    height:400px;\r\n    border-radius:4px;\r\n    background-image:url(${props => props.bgUrl});\r\n    background-size:cover;\r\n    background-position:center center;\r\n    transition: opacity 0.1s ease-in-out\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    position:absolute; right:5px; bottom:5px; opacity:0; transition: opacity 0.1s ease-in-out\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    position:relative;\r\n    margin-bottom:10px;\r\n    &:hover {\r\n        ${Image} { opacity:0.3 }\r\n        ${Rating} { opacity:1 }\r\n    }\r\n`;\r\n\r\nconst Title = styled.strong`\r\n    display:block; font-size:16px; margin-bottom:3px\r\n`;\r\nconst Year = styled.span`\r\n    font-size:12px; color:rgba(255, 255, 255, 0.5)\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300/${imageUrl}` : require(\"../assets/noPosterSmall.png\").default} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">⭐</span>{\" \"}{rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n)\r\n\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw; height:100vh; text-align:center;\r\n`;\r\nconst LoadFrame = keyframes`\r\n    0% {\r\n        transform: rotate(0);\r\n        animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\r\n    }\r\n    50% {\r\n        transform: rotate(900deg);\r\n        animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\r\n    }\r\n    100% {\r\n        transform: rotate(1800deg);\r\n    }\r\n`;\r\nconst Load = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top:200px;\r\n    width: 20px;\r\n    height: 20px;\r\n    &:after {\r\n        content: \" \";\r\n        display: block;\r\n        border-radius: 50%;\r\n        width: 0;\r\n        height: 0;\r\n        margin: 8px;\r\n        box-sizing: border-box;\r\n        border: 32px solid #fff;\r\n        border-color: #fff transparent #fff transparent;\r\n        animation: ${LoadFrame} 1.2s infinite;\r\n    }\r\n`;\r\n\r\nexport default () => <Container><Load role=\"img\" aria-label=\"loading\"><div></div><div></div></Load></Container>","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding-bottom:50px\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-weight:700; font-size:50px;\r\n`;\r\n\r\nconst Content = styled.p`\r\n    width:48%; line-height:1.4; padding-top:20px; font-size:20px;\r\n`;\r\n\r\nconst PageIntro = ({ title, content }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Content>{content}</Content>\r\n    </Container>\r\n);\r\n\r\nPageIntro.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default PageIntro;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport Wrapper from \"Components/Wrapper\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Loader from \"Components/Loader\";\r\nimport PageIntro from \"Components/PageIntro\";\r\n\r\nconst HomePresenter = ({nowPlaying, upComing, popular, error, loading}) => (\r\n    <>\r\n    <Helmet>\r\n        <title>Movies | Nomfilx Official</title>\r\n    </Helmet>\r\n    {loading ?  <Loader /> : (\r\n            <Wrapper>\r\n                <PageIntro title=\"Movie\" content=\"From fear that squeezes the whole body to comedy that makes people laugh, to dramas and romance that evoke empathy. The movie is talking to you. The touching and comfort of countless stories! That's why we watch movies.\"/>\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map(movie => (\r\n                            <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.original_title} \r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {upComing && upComing.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        {upComing.map(movie => (\r\n                            <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.original_title} \r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        {popular.map(movie => (\r\n                            <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.original_title} \r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message text={error} color=\"#e74c3c\" />}\r\n            </Wrapper>\r\n        )}\r\n    </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    upcomfing: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"8937c1e1cba20c3b7fb7eb946f7ab443\",\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upComing: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    moiveDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: (term)\r\n        }\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: term\r\n        }\r\n    }),\r\n};\r\n\r\nexport const searchApi = {\r\n    keyword: (term) => api.get(\"search/keyword\", {\r\n        params: {\r\n            query: term\r\n        }\r\n    })\r\n}","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upComing: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try {\r\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\r\n            const { data: { results: upComing } } = await moviesApi.upComing();\r\n            const { data: { results: popular } } = await moviesApi.popular();\r\n            this.setState({ nowPlaying, upComing, popular });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            });\r\n        } finally {\r\n            window.scrollTo(0, 0);\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n        return (\r\n            <HomePresenter\r\n            nowPlaying={nowPlaying}\r\n            upComing={upComing}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading} />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport Wrapper from \"Components/Wrapper\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport PageIntro from \"Components/PageIntro\";\r\n\r\n\r\nconst TVPresenter = ({topRated, airingToday, popular, error, loading}) => (\r\n    <>\r\n    <Helmet>\r\n        <title>TV Shows | Nomfilx Official</title>\r\n    </Helmet>\r\n    {loading ?  <Loader /> : (\r\n        <Wrapper>\r\n            <PageIntro title=\"TV Shows\" content=\"Don't ignore me because I'm small. Even though the screen size is small, there is an infinite world on TV. From sitcoms to dramas to travel programs and talk shows. All the fun in the world, in the TV.\" />\r\n            {topRated && topRated.length > 0 && (\r\n                <Section title=\"Top Rated Shows\">\r\n                    {topRated.map(show => (\r\n                        <Poster \r\n                            key={show.id}\r\n                            id={show.id}\r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            isMovie={false}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {popular && popular.length > 0 && (\r\n                <Section title=\"Popular Shows\">\r\n                    {popular.map(show => (\r\n                        <Poster \r\n                            key={show.id}\r\n                            id={show.id}\r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            isMovie={false}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {airingToday && airingToday.length > 0 && (\r\n                <Section title=\"Airing Today\">\r\n                    {airingToday.map(show => (\r\n                        <Poster \r\n                            key={show.id}\r\n                            id={show.id}\r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            isMovie={false}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {error && <Message text={error} color=\"#e74c3c\" />}\r\n        </Wrapper>\r\n    )}\r\n    </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\"\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try {\r\n            const { data: { results: topRated } } = await tvApi.topRated();\r\n            const { data: { results: popular } } = await tvApi.popular();\r\n            const { data: { results: airingToday } } = await tvApi.airingToday();\r\n            this.setState({ topRated, popular, airingToday });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            });\r\n        } finally {\r\n            window.scrollTo(0, 0);\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { topRated, airingToday, popular, error, loading } = this.state;\r\n        return (\r\n            <TVPresenter\r\n            topRated={topRated}\r\n            airingToday={airingToday}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading} />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Wrapper from \"Components/Wrapper\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst SearchContainer = styled.div`\r\n    display:flex; min-height:60vh;\r\n`;\r\nconst Form = styled.form`\r\n    width:25%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset; line-height:50px; font-size:28px; width:100%; padding:0 20px;\r\n    border-bottom:2px solid rgba(255, 255, 255, .3); box-sizing:border-box\r\n`;\r\n\r\nconst TypingText = styled.ul`\r\n    padding:20px 20px 0; font-size:25px; color:rgba(255, 255, 255, .3);\r\n    li {line-height:2; font-weight:400;}\r\n`;\r\n const Keyword = styled.a`\r\n    cursor:pointer;\r\n    &:hover {color:rgba(255, 255, 255, .7)}\r\n `;\r\n\r\n const SearchResult = styled.div`\r\n    width:75%; padding-left:50px;\r\n`;\r\n\r\nconst SearchPresenter = ({movieResults, showResults, keyWordResults, searchTerm, updateTerm, handleSubmit, clickKeyword, error, loading}) =>(\r\n    <>\r\n    <Helmet>\r\n        <title>Search | Nomfilx Official</title>\r\n    </Helmet>\r\n    <Wrapper>\r\n        <SearchContainer>\r\n            <Form onSubmit={handleSubmit}>\r\n                <>\r\n                    <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\r\n                    <TypingText>\r\n                        {keyWordResults && keyWordResults.length > 0 && (\r\n                            keyWordResults.map((keyword, index) => {\r\n                                if(index < 13){\r\n                                    return <li key={index}><Keyword onClick={clickKeyword}>{keyword.name}</Keyword></li>\r\n                                }\r\n                            })\r\n                        )}\r\n                    </TypingText>\r\n                </>\r\n            </Form>\r\n            <SearchResult>\r\n                {loading ? <Loader /> : (\r\n                    <>\r\n                        <Section title=\"Movie Results\">\r\n                            {movieResults && movieResults.length > 0 && (\r\n                                movieResults.map(movie => {\r\n                                    return (\r\n                                        <Poster \r\n                                        key={movie.id}\r\n                                        id={movie.id}\r\n                                        title={movie.original_title} \r\n                                        imageUrl={movie.poster_path}\r\n                                        rating={movie.vote_average}\r\n                                        year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                        isMovie={true}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            )}\r\n                        </Section>\r\n                        <Section title=\"TV Show Results\">\r\n                            {showResults && showResults.length > 0 && (\r\n                                showResults.map(show => {\r\n                                    return (\r\n                                        <Poster \r\n                                        key={show.id}\r\n                                        id={show.id}\r\n                                        title={show.original_name} \r\n                                        imageUrl={show.poster_path}\r\n                                        rating={show.vote_average}\r\n                                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                                        isMovie={false}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            )}\r\n                        </Section>\r\n                        {error && <Message text={error} color=\"#e74c3c\" />}\r\n                        {   showResults &&\r\n                            movieResults &&\r\n                            showResults.length === 0 &&\r\n                            movieResults.length === 0 && (\r\n                            <Message text=\"Nothing found\" color=\"#95a5A6\" />\r\n                        )}\r\n                    </>\r\n                )}\r\n            </SearchResult>\r\n        </SearchContainer>\r\n    </Wrapper>\r\n    </>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    showResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    updateTerm: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import { moviesApi, tvApi, searchApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        showResults: null,\r\n        keyWordResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n    \r\n    updateTerm = (event) => {\r\n        const { target: { value } } = event;\r\n        this.setState({\r\n            searchTerm: value,\r\n        }, () => {\r\n            this.searchByKeyword();\r\n            this.searchByTerm();\r\n        });\r\n    }\r\n\r\n    clickKeyword = (event) => {\r\n        event.preventDefault();\r\n        const { target: {innerText} } = event;\r\n        this.setState({\r\n            searchTerm: innerText,\r\n        }, this.searchByTerm);\r\n    }\r\n\r\n    searchByKeyword = async () => {\r\n        try {\r\n            const { searchTerm } = this.state;\r\n            const { data: { results: keyWordResults } } = await searchApi.keyword(searchTerm);\r\n            if (keyWordResults !== null) {\r\n                this.setState({ keyWordResults });\r\n            }\r\n        } catch {\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try {\r\n            const { data: { results: movieResults } } = await moviesApi.search(searchTerm);\r\n            const { data: { results: showResults } } = await tvApi.search(searchTerm);\r\n            this.setState({ movieResults, showResults });\r\n        } catch {\r\n            this.setState({ error: \"Can't find results.\" });\r\n        } finally {\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { movieResults, showResults, keyWordResults, searchTerm, updateTerm, clickKeyword, loading, error } = this.state;\r\n        return (\r\n            <SearchPresenter\r\n            movieResults={movieResults}\r\n            showResults={showResults}\r\n            keyWordResults={keyWordResults}\r\n            searchTerm={searchTerm}\r\n            loading={loading}\r\n            error={error}\r\n            clickKeyword={this.clickKeyword}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm} />\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/icon-imdb.55e9a457.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport iconImdb from \"../../assets/icon-imdb.svg\";\r\nimport SwiperCore, { Pagination } from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\nconst Container = styled.div`\r\n    padding:0 0 100px 50px;\r\n`;\r\n\r\nconst HeadContent = styled.div`\r\n    position:relative; height:70vh; width:100%\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position:absolute; top:0; right:0; z-index:0; width:100%; height:100vh;\r\n    background-image:url(${props => props.bgImage});\r\n    background-position:right top;\r\n    background-size:100% auto;\r\n    background-repeat:no-repeat;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    position:relative; z-index:1; width:70%; height:100vh; padding:0 8%; background:linear-gradient(to right, #000 0%, transparent 100%);\r\n    &:before {\r\n        content:\"\"; display:inline-block; width:0; height:100%; vertical-align:middle;\r\n    }    \r\n`;\r\n\r\nconst DataInner = styled.div`\r\n    display:inline-block; vertical-align:middle;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    display:inline-block; margin-bottom:2.6042vw; font-weight:700; font-size:4.6875vw; color:#fff; text-shadow:3px 3px 6px rgba(0, 0, 0, .3);\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin-bottom:20px;\r\n    + div {margin-top:-10px}\r\n`;\r\n\r\nconst Item = styled.span`\r\n    line-height:21px; color:rgba(255, 255, 255, .7); vertical-align:top;\r\n    ~ span {\r\n        position:relative; display:inline-block; padding-left:20px;\r\n    }\r\n    ~ span:after {\r\n        content:\"\"; position:absolute; top:50%; left:8px; width:3px; height:3px;\r\n        border-radius:100%; background:rgba(255, 255, 255, .7);\r\n        transform:translateY(-50%);\r\n    }\r\n    &.link-imdb {width:62px}\r\n    &.link-imdb:after {display:none}\r\n    &.link-imdb img {width:100%; vertical-align:top}\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    width:60%; line-height:1.7; color:rgba(255, 255, 255, 0.9);\r\n`;\r\n\r\nconst SubContent = styled.div`\r\n    position:relative; z-index:1; padding:100px 8% 0; color:#fff;\r\n    .sub-section {\r\n        ~ .sub-section {margin-top:100px}\r\n    }\r\n`;\r\n\r\nconst SubTitle = styled.h4`\r\n    padding-bottom:50px; font-size:30px; color:#fff\r\n`;\r\n\r\nconst Video = styled.div`\r\n    position:relative; padding-bottom:56.25%;\r\n    iframe {position:absolute; top:0; left:0; width:100%; height:100%}\r\n`;\r\n\r\nconst Creators = styled.div`\r\n    display:flex;\r\n`;\r\n\r\nconst Creator = styled.strong`\r\n    position:relative; margin-right:50px; padding-left:80px; font-weight:400; font-size:20px;\r\n    &:after {content:\"\"; position:absolute; top:50%; left:0; width:60px; height:60px; border-radius:100%;\r\n    background-color:rgba(255, 255, 255, .5);\r\n    background-image:url(${props => props.profileImage});\r\n    background-position:center center;\r\n    background-size:cover; transform:translateY(-50%)}\r\n`;\r\n\r\nconst CompanyContainer = styled.div``;\r\nconst Companies = styled.ul`\r\n    display:flex; flex-direction:row;\r\n`;\r\nconst Company = styled.li`\r\n    position:relative; padding:0 80px 0 40px;\r\n    &:after {content:\"\"; position:absolute; top:50%; left:0; width:30px; height:30px; border-radius:100%;\r\n    background-color:rgba(255, 255, 255, .5);\r\n    background-image:url(${props => props.logoimage});\r\n    background-position:center center;\r\n    background-size:cover; transform:translateY(-50%)}\r\n    span {display:inline-block; position:relative; top:50%; transform:translateY(-50%); line-height:1.4; letter-spacing:0.1em; color:rgba(255, 255, 255, .7)}\r\n`;\r\n\r\nconst Seasons = styled.ul`\r\n    display:grid; grid-template-columns:repeat(6, minmax(0, 1fr)); grid-column-gap:10px; grid-row-gap:20px;\r\n`;\r\nconst Season = styled.li`\r\n    img {width:100%}\r\n    p {padding-top:10px; font-size:16px; color:rgba(255, 255, 255, .6)}\r\n`;\r\n\r\nSwiperCore.use([Pagination]);\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => (\r\n    loading ? (\r\n        <>\r\n        <Helmet>\r\n            <title>Loading | Nomfilx Official</title>\r\n        </Helmet>\r\n        <Loader />\r\n        </>\r\n    ): (\r\n        error ? <Message text={error} color=\"#e74c3c\" /> : (\r\n        <Container>\r\n            <Helmet>\r\n                <title>{result.original_title ? result.original_title : result.original_name} | Nomfilx Official</title>\r\n            </Helmet>\r\n            <HeadContent>\r\n                <Backdrop bgImage={result.backdrop_path ? `https://image.tmdb.org/t/p/original${result.backdrop_path}` : `https://image.tmdb.org/t/p/original${result.poster_path}`} />\r\n                <Data><DataInner>\r\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                    <ItemContainer>\r\n                        <Item>{result.release_date ? result.release_date.substring(0, 4) : `${result.first_air_date.substring(0, 4)}-${result.last_air_date.substring(0, 4)}`}</Item>\r\n                        <Item>{result.runtime ? `${result.runtime} min` : `${result.number_of_seasons} seasons`}</Item>\r\n                        <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `)}</Item>\r\n                        <Item className=\"link-imdb\"><a href={`https://www.imdb.com/title/${result.imdb_id}`} target=\"_blank\" title=\"new\"><img src={iconImdb}/></a></Item>\r\n                    </ItemContainer>\r\n                    <ItemContainer>\r\n                        <Item>{result.production_countries.map((country, index) => index === result.production_countries.length - 1 ? country.name : `${country.name} / `)}</Item>\r\n                    </ItemContainer>\r\n                    <Overview>{result.overview}</Overview>\r\n                    </DataInner></Data>\r\n            </HeadContent>\r\n            <SubContent>\r\n                <div className=\"sub-section\">\r\n                { result.videos.results.length > 0 ? (\r\n                    <>\r\n                    <SubTitle>Videos</SubTitle>\r\n                    <Swiper\r\n                        loop={false}\r\n                        spaceBetween={50}\r\n                        slidesPerView={3}\r\n                        pagination={true}\r\n                    >\r\n                        {result.videos.results.map((video, index) => (\r\n                            <SwiperSlide key={index}><Video><iframe src={`https://www.youtube.com/embed/${video.key}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe></Video></SwiperSlide>\r\n                        ))}\r\n                    </Swiper>\r\n                    </>\r\n                ) : null}\r\n                </div>\r\n                <div className=\"sub-section\">\r\n                { result.created_by && result.created_by.length > 0 ? (\r\n                    <>\r\n                    <SubTitle>Creators</SubTitle>\r\n                    <Creators>\r\n                        {result.created_by.map((creator, index) => (\r\n                            <Creator key={index} profileImage={creator.profile_path ? `https://image.tmdb.org/t/p/original${creator.profile_path}` : require(\"../../assets/noPosterSmall.png\").default}>{creator.name}</Creator>\r\n                        ))}\r\n                    </Creators>\r\n                    </>\r\n                ) : null}\r\n                </div>\r\n                <div className=\"sub-section\">\r\n                { result.production_companies.length > 0 ? (\r\n                    <CompanyContainer>\r\n                        <SubTitle>Production Companies</SubTitle>\r\n                        <Companies>\r\n                            {\r\n                                result.production_companies.map((company, index) => (\r\n                                    <Company key={index} logoimage={company.logo_path ? `https://image.tmdb.org/t/p/original${company.logo_path}` : null}><span>{company.name}</span></Company>\r\n                                ))\r\n                            }\r\n                        </Companies>\r\n                    </CompanyContainer>\r\n                ) : null }\r\n                </div>\r\n                <div className=\"sub-section\">\r\n                { result.seasons ? (\r\n                    <>\r\n                    <SubTitle>Seasons</SubTitle>\r\n                    <Seasons>\r\n                        {result.seasons.map((season, index) => (\r\n                            <Season key={index}>\r\n                                <img src={`https://image.tmdb.org/t/p/original${season.poster_path}`} />\r\n                                <p>{season.name} {season.air_date === null ? `(${season.air_date})` : `(${season.air_date.substring(0, 4)})`}</p>\r\n                            </Season>\r\n                        ))}\r\n                    </Seasons>\r\n                    </>\r\n                ) : null}\r\n                </div>\r\n            </SubContent>\r\n        </Container>\r\n        )\r\n    )\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const { location: { pathname } } = this.props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const {\r\n            match: { \r\n                params: { id } \r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n        const parseId = parseInt(id);\r\n        const { isMovie } = this.state;\r\n        if(isNaN(parseId)){\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if(isMovie){\r\n                ({ data: result } = await moviesApi.moiveDetail(parseId));\r\n            } else {\r\n                ({ data: result } = await tvApi.showDetail(parseId));\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything.\" });\r\n        } finally {\r\n            window.scrollTo(0, 0);\r\n            this.setState({ loading: false, result});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { result, error, loading } = this.state;\r\n        return (\r\n            <DetailPresenter\r\n            result={result}\r\n            error={error}\r\n            loading={loading} />\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/clapperboard.1e18c406.svg\";","export default __webpack_public_path__ + \"static/media/tv.acdca9c1.svg\";","export default __webpack_public_path__ + \"static/media/loupe.ced13e5e.svg\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport movieImg from \"assets/clapperboard.svg\";\r\nimport tvImg from \"assets/tv.svg\";\r\nimport searchImg from \"assets/loupe.svg\";\r\n\r\nconst HeadeContainer = styled.header`\r\nposition:fixed; top:0; bottom:0; left:0; z-index:500; width:50px; text-align:center; background:rgba(0, 0, 0, .8); box-shadow:1px 0 5px rgba(255, 255, 255, .05)\r\n`;\r\n\r\nconst List = styled.ul`\r\ndisplay:inline-block; position:relative; top:50%; transform:translateY(-50%);\r\n`;\r\n\r\nconst Item = styled.li`\r\nposition:relative; width:36px; height:36px; line-height:36px; font-size:0; color:#fff; border-radius:100%; \r\nbackground:rgba(255, 255, 255, ${props => props.current ? \"1\" : \".7\"});\r\n&:hover {background:rgba(255, 255, 255, 1)}\r\na {\r\n    &:after {content:\"\"; position:absolute; top:0; right:0; bottom:0; left:0; z-index:0; background-size:22px; background-repeat:no-repeat; background-position:50% 50%}\r\n}\r\n&:first-child {\r\n    a:after {background-image:url(${movieImg})}\r\n}\r\n&:nth-child(2) {\r\n    a:after {background-image:url(${tvImg})}\r\n}\r\n&:nth-child(3) {\r\n    a:after {background-image:url(${searchImg})}\r\n}\r\n~ {\r\n    li {margin-top:50px}\r\n}\r\n`;\r\n\r\nconst $Link = styled(Link)`\r\n    display:block;\r\n    &:focus {color:inherit}\r\n`;\r\n\r\nconst Header = ({location: { pathname }}) => (\r\n    <HeadeContainer className=\"nav\">\r\n        <List>\r\n            <Item current={pathname === \"/\"}><$Link to=\"/\">Movies</$Link></Item>\r\n            <Item current={pathname === \"/tv\"}><$Link to=\"/tv\">TV</$Link></Item>\r\n            <Item current={pathname === \"/search\"}><$Link to=\"/search\">Search</$Link></Item>\r\n        </List>\r\n    </HeadeContainer>\r\n)\r\n\r\nexport default withRouter(Header);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FooterContainer = styled.div`\r\n    padding:30px 0 50px; font-weight:500; font-size:16px; color:#fff; text-align:center\r\n`;\r\nconst Links = styled.div`\r\n    ~ div {margin-top:20px}\r\n    ul {display:inline-block}\r\n    ul:after {content:\"\"; display:block; clear:both}\r\n    ul li {float:left; margin:0 15px}\r\n`;\r\nconst Copy = styled.div`\r\n    padding-top:25px;\r\n    .logo {font-weight:500; letter-spacing:0.3em; font-size:14px; color:#fff; text-transform:uppercase}\r\n    p {padding-top:25px; font-size:12px; color:rgba(255, 255, 255, .5)}\r\n`;\r\n\r\nconst Footer = () => (\r\n    <FooterContainer>\r\n        <Links>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/tv\">TV Shows</Link></li>\r\n                <li><Link to=\"/search\">Search</Link></li>\r\n            </ul>\r\n        </Links>\r\n        <Links>\r\n            <ul>\r\n                <li>Help</li>\r\n                <li>Box Office Nomflix</li>\r\n                <li>Nomflix Developer</li>\r\n            </ul>\r\n        </Links>\r\n        <Copy>\r\n            <span className=\"logo\">Nomflix Official</span>\r\n            <p>&copy; 2020-2021 by Nomfilx.net</p>\r\n        </Copy>\r\n    </FooterContainer>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\"\r\nimport TV from \"Routes/TV\"\r\nimport Search from \"Routes/Search\"\r\nimport Detail from \"Routes/Detail\"\r\nimport Header from \"Components/Header\"\r\nimport Footer from \"Components/Footer\"\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/tv\" exact component={TV} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/tv/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n            <Footer />\r\n        </>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    body {overflow-x:hidden; font-family:Roboto; font-size:14px; color:#fff; background-color:rgba(20, 20, 20, 1)}\r\n    * {margin:0; padding:0; box-sizing:border-box}\r\n    a {text-decoration:none; color:inherit}\r\n    ul li {list-style:none}\r\n`;\r\n\r\nexport default globalStyles;","import React from 'react';\nimport Router from \"Components/Router\"\nimport GlobalStyles from \"Components/GlobalStyles\"\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}