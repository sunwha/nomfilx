[{"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\index.js":"1","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\App.js":"2","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Router.js":"3","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Header.js":"4","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\GlobalStyles.js":"5","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\api.js":"6","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Home\\index.js":"7","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Home\\HomeContainer.js":"8","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Home\\HomePresenter.js":"9","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\TV\\index.js":"10","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Search\\index.js":"11","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\TV\\TVContainer.js":"12","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Search\\SearchContainer.js":"13","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\TV\\TVPresenter.js":"14","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Search\\SearchPresenter.js":"15","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Detail\\index.js":"16","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Detail\\DetailContainer.js":"17","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Detail\\DetailPresenter.js":"18","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Section.js":"19","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Loader.js":"20","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Message.js":"21","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Poster.js":"22","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Wrapper.js":"23","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Footer.js":"24","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\PageIntro.js":"25"},{"size":160,"mtime":1611127287127,"results":"26","hashOfConfig":"27"},{"size":229,"mtime":1611040747173,"results":"28","hashOfConfig":"27"},{"size":850,"mtime":1611711518299,"results":"29","hashOfConfig":"27"},{"size":1770,"mtime":1611795287435,"results":"30","hashOfConfig":"27"},{"size":425,"mtime":1611794110494,"results":"31","hashOfConfig":"27"},{"size":1196,"mtime":1611820270745,"results":"32","hashOfConfig":"27"},{"size":77,"mtime":1611130660865,"results":"33","hashOfConfig":"27"},{"size":1257,"mtime":1611794022085,"results":"34","hashOfConfig":"27"},{"size":3414,"mtime":1611737304965,"results":"35","hashOfConfig":"27"},{"size":70,"mtime":1611132632288,"results":"36","hashOfConfig":"27"},{"size":83,"mtime":1611211833260,"results":"37","hashOfConfig":"27"},{"size":1237,"mtime":1611794063248,"results":"38","hashOfConfig":"27"},{"size":2508,"mtime":1611824525551,"results":"39","hashOfConfig":"27"},{"size":3192,"mtime":1611737555345,"results":"40","hashOfConfig":"27"},{"size":4874,"mtime":1611821613700,"results":"41","hashOfConfig":"27"},{"size":83,"mtime":1611132618837,"results":"42","hashOfConfig":"27"},{"size":1474,"mtime":1611794056994,"results":"43","hashOfConfig":"27"},{"size":9263,"mtime":1611823433714,"results":"44","hashOfConfig":"27"},{"size":731,"mtime":1611737800328,"results":"45","hashOfConfig":"27"},{"size":1102,"mtime":1611821276848,"results":"46","hashOfConfig":"27"},{"size":554,"mtime":1611804203356,"results":"47","hashOfConfig":"27"},{"size":1865,"mtime":1611820360289,"results":"48","hashOfConfig":"27"},{"size":176,"mtime":1611794105289,"results":"49","hashOfConfig":"27"},{"size":1335,"mtime":1611727791823,"results":"50","hashOfConfig":"27"},{"size":635,"mtime":1611737570653,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1xannrm",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\index.js",[],["112","113"],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\App.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Router.js",["114"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\"\r\nimport TV from \"Routes/TV\"\r\nimport Search from \"Routes/Search\"\r\nimport Detail from \"Routes/Detail\"\r\nimport Header from \"Components/Header\"\r\nimport Footer from \"Components/Footer\"\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/tv\" exact component={TV} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/tv/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n            <Footer />\r\n        </>\r\n    </Router>\r\n)","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Header.js",["115","116","117"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport movieImg from \"assets/clapperboard.svg\";\r\nimport tvImg from \"assets/tv.svg\";\r\nimport searchImg from \"assets/loupe.svg\";\r\n\r\nconst HeadeContainer = styled.header`\r\nposition:fixed; top:0; bottom:0; left:0; z-index:500; width:50px; text-align:center; background:rgba(0, 0, 0, .8); box-shadow:1px 0 5px rgba(255, 255, 255, .05)\r\n`;\r\n\r\nconst List = styled.ul`\r\ndisplay:inline-block; position:relative; top:50%; transform:translateY(-50%);\r\n`;\r\n\r\nconst Item = styled.li`\r\nposition:relative; width:36px; height:36px; line-height:36px; font-size:0; color:#fff; border-radius:100%; \r\nbackground:rgba(255, 255, 255, ${props => props.current ? \"1\" : \".7\"});\r\n&:hover {background:rgba(255, 255, 255, 1)}\r\na {\r\n    &:after {content:\"\"; position:absolute; top:0; right:0; bottom:0; left:0; z-index:0; background-size:22px; background-repeat:no-repeat; background-position:50% 50%}\r\n}\r\n&:first-child {\r\n    a:after {background-image:url(${movieImg})}\r\n}\r\n&:nth-child(2) {\r\n    a:after {background-image:url(${tvImg})}\r\n}\r\n&:nth-child(3) {\r\n    a:after {background-image:url(${searchImg})}\r\n}\r\n~ {\r\n    li {margin-top:50px}\r\n}\r\n`;\r\n\r\nconst $Link = styled(Link)`\r\n    display:block;\r\n    &:focus {color:inherit}\r\n`;\r\n\r\nconst Header = ({location: { pathname }}) => (\r\n    <HeadeContainer className=\"nav\">\r\n        <List>\r\n            <Item current={pathname === \"/\"}><$Link to=\"/\">Movies</$Link></Item>\r\n            <Item current={pathname === \"/tv\"}><$Link to=\"/tv\">TV</$Link></Item>\r\n            <Item current={pathname === \"/search\"}><$Link to=\"/search\">Search</$Link></Item>\r\n        </List>\r\n    </HeadeContainer>\r\n)\r\n\r\nexport default withRouter(Header);","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\GlobalStyles.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\api.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Home\\index.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Home\\HomeContainer.js",["118"],"import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upComing: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try {\r\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\r\n            const { data: { results: upComing } } = await moviesApi.upComing();\r\n            const { data: { results: popular } } = await moviesApi.popular();\r\n            this.setState({ nowPlaying, upComing, popular });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            });\r\n        } finally {\r\n            window.scrollTo(0, 0);\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n        return (\r\n            <HomePresenter\r\n            nowPlaying={nowPlaying}\r\n            upComing={upComing}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading} />\r\n        );\r\n    }\r\n}","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Home\\HomePresenter.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\TV\\index.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Search\\index.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\TV\\TVContainer.js",["119"],"import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\"\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try {\r\n            const { data: { results: topRated } } = await tvApi.topRated();\r\n            const { data: { results: popular } } = await tvApi.popular();\r\n            const { data: { results: airingToday } } = await tvApi.airingToday();\r\n            this.setState({ topRated, popular, airingToday });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            });\r\n        } finally {\r\n            window.scrollTo(0, 0);\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { topRated, airingToday, popular, error, loading } = this.state;\r\n        return (\r\n            <TVPresenter\r\n            topRated={topRated}\r\n            airingToday={airingToday}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading} />\r\n        );\r\n    }\r\n}","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Search\\SearchContainer.js",["120","121","122"],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\TV\\TVPresenter.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Search\\SearchPresenter.js",["123","124"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Wrapper from \"Components/Wrapper\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst SearchContainer = styled.div`\r\n    display:flex; min-height:60vh;\r\n`;\r\nconst Form = styled.form`\r\n    width:25%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset; line-height:50px; font-size:28px; width:100%; padding:0 20px;\r\n    border-bottom:2px solid rgba(255, 255, 255, .3); box-sizing:border-box\r\n`;\r\n\r\nconst TypingText = styled.ul`\r\n    padding:20px 20px 0; font-size:25px; color:rgba(255, 255, 255, .3);\r\n    li {line-height:2; font-weight:400;}\r\n`;\r\n const Keyword = styled.a`\r\n    cursor:pointer;\r\n    &:hover {color:rgba(255, 255, 255, .7)}\r\n `;\r\n\r\n const SearchResult = styled.div`\r\n    width:75%; padding-left:50px;\r\n`;\r\n\r\nconst SearchPresenter = ({movieResults, showResults, keyWordResults, searchTerm, updateTerm, handleSubmit, clickKeyword, error, loading}) =>(\r\n    <>\r\n    <Helmet>\r\n        <title>Search | Nomfilx Official</title>\r\n    </Helmet>\r\n    <Wrapper>\r\n        <SearchContainer>\r\n            <Form onSubmit={handleSubmit}>\r\n                <>\r\n                    <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\r\n                    <TypingText>\r\n                        {keyWordResults && keyWordResults.length > 0 && (\r\n                            keyWordResults.map((keyword, index) => {\r\n                                if(index < 13){\r\n                                    return <li key={index}><Keyword onClick={clickKeyword}>{keyword.name}</Keyword></li>\r\n                                }\r\n                            })\r\n                        )}\r\n                    </TypingText>\r\n                </>\r\n            </Form>\r\n            <SearchResult>\r\n                {loading ? <Loader /> : (\r\n                    <>\r\n                        <Section title=\"Movie Results\">\r\n                            {movieResults && movieResults.length > 0 && (\r\n                                movieResults.map(movie => {\r\n                                    return (\r\n                                        <Poster \r\n                                        key={movie.id}\r\n                                        id={movie.id}\r\n                                        title={movie.original_title} \r\n                                        imageUrl={movie.poster_path}\r\n                                        rating={movie.vote_average}\r\n                                        year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                        isMovie={true}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            )}\r\n                        </Section>\r\n                        <Section title=\"TV Show Results\">\r\n                            {showResults && showResults.length > 0 && (\r\n                                showResults.map(show => {\r\n                                    return (\r\n                                        <Poster \r\n                                        key={show.id}\r\n                                        id={show.id}\r\n                                        title={show.original_name} \r\n                                        imageUrl={show.poster_path}\r\n                                        rating={show.vote_average}\r\n                                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                                        isMovie={false}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            )}\r\n                        </Section>\r\n                        {error && <Message text={error} color=\"#e74c3c\" />}\r\n                        {   showResults &&\r\n                            movieResults &&\r\n                            showResults.length === 0 &&\r\n                            movieResults.length === 0 && (\r\n                            <Message text=\"Nothing found\" color=\"#95a5A6\" />\r\n                        )}\r\n                    </>\r\n                )}\r\n            </SearchResult>\r\n        </SearchContainer>\r\n    </Wrapper>\r\n    </>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    showResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    updateTerm: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default SearchPresenter;","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Detail\\index.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Detail\\DetailContainer.js",["125"],"import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const { location: { pathname } } = this.props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const {\r\n            match: { \r\n                params: { id } \r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n        const parseId = parseInt(id);\r\n        const { isMovie } = this.state;\r\n        if(isNaN(parseId)){\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if(isMovie){\r\n                ({ data: result } = await moviesApi.moiveDetail(parseId));\r\n            } else {\r\n                ({ data: result } = await tvApi.showDetail(parseId));\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything.\" });\r\n        } finally {\r\n            window.scrollTo(0, 0);\r\n            this.setState({ loading: false, result});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { result, error, loading } = this.state;\r\n        return (\r\n            <DetailPresenter\r\n            result={result}\r\n            error={error}\r\n            loading={loading} />\r\n        );\r\n    }\r\n}","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Routes\\Detail\\DetailPresenter.js",["126","127","128","129","130"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport iconImdb from \"../../assets/icon-imdb.svg\";\r\nimport SwiperCore, { Pagination } from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\nconst Container = styled.div`\r\n    padding:0 0 100px 50px;\r\n`;\r\n\r\nconst HeadContent = styled.div`\r\n    position:relative; height:70vh; width:100%\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position:absolute; top:0; right:0; z-index:0; width:100%; height:100vh;\r\n    background-image:url(${props => props.bgImage});\r\n    background-position:right top;\r\n    background-size:100% auto;\r\n    background-repeat:no-repeat;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    position:relative; z-index:1; width:70%; height:100vh; padding:0 8%; background:linear-gradient(to right, #000 0%, transparent 100%);\r\n    &:before {\r\n        content:\"\"; display:inline-block; width:0; height:100%; vertical-align:middle;\r\n    }    \r\n`;\r\n\r\nconst DataInner = styled.div`\r\n    display:inline-block; vertical-align:middle;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    display:inline-block; margin-bottom:2.6042vw; font-weight:700; font-size:4.6875vw; color:#fff; text-shadow:3px 3px 6px rgba(0, 0, 0, .3);\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin-bottom:20px;\r\n    + div {margin-top:-10px}\r\n`;\r\n\r\nconst Item = styled.span`\r\n    line-height:21px; color:rgba(255, 255, 255, .7); vertical-align:top;\r\n    ~ span {\r\n        position:relative; display:inline-block; padding-left:20px;\r\n    }\r\n    ~ span:after {\r\n        content:\"\"; position:absolute; top:50%; left:8px; width:3px; height:3px;\r\n        border-radius:100%; background:rgba(255, 255, 255, .7);\r\n        transform:translateY(-50%);\r\n    }\r\n    &.link-imdb {width:62px}\r\n    &.link-imdb:after {display:none}\r\n    &.link-imdb img {width:100%; vertical-align:top}\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    width:60%; line-height:1.7; color:rgba(255, 255, 255, 0.9);\r\n`;\r\n\r\nconst SubContent = styled.div`\r\n    position:relative; z-index:1; padding:100px 8% 0; color:#fff;\r\n    .sub-section {\r\n        ~ .sub-section {margin-top:100px}\r\n    }\r\n`;\r\n\r\nconst SubTitle = styled.h4`\r\n    padding-bottom:50px; font-size:30px; color:#fff\r\n`;\r\n\r\nconst Video = styled.div`\r\n    position:relative; padding-bottom:56.25%;\r\n    iframe {position:absolute; top:0; left:0; width:100%; height:100%}\r\n`;\r\n\r\nconst Creators = styled.div`\r\n    display:flex;\r\n`;\r\n\r\nconst Creator = styled.strong`\r\n    position:relative; margin-right:50px; padding-left:80px; font-weight:400; font-size:20px;\r\n    &:after {content:\"\"; position:absolute; top:50%; left:0; width:60px; height:60px; border-radius:100%;\r\n    background-color:rgba(255, 255, 255, .5);\r\n    background-image:url(${props => props.profileImage});\r\n    background-position:center center;\r\n    background-size:cover; transform:translateY(-50%)}\r\n`;\r\n\r\nconst CompanyContainer = styled.div``;\r\nconst Companies = styled.ul`\r\n    display:flex; flex-direction:row;\r\n`;\r\nconst Company = styled.li`\r\n    position:relative; padding:0 80px 0 40px;\r\n    &:after {content:\"\"; position:absolute; top:50%; left:0; width:30px; height:30px; border-radius:100%;\r\n    background-color:rgba(255, 255, 255, .5);\r\n    background-image:url(${props => props.logoimage});\r\n    background-position:center center;\r\n    background-size:cover; transform:translateY(-50%)}\r\n    span {display:inline-block; position:relative; top:50%; transform:translateY(-50%); line-height:1.4; letter-spacing:0.1em; color:rgba(255, 255, 255, .7)}\r\n`;\r\n\r\nconst Seasons = styled.ul`\r\n    display:grid; grid-template-columns:repeat(6, minmax(0, 1fr)); grid-column-gap:10px; grid-row-gap:20px;\r\n`;\r\nconst Season = styled.li`\r\n    img {width:100%}\r\n    p {padding-top:10px; font-size:16px; color:rgba(255, 255, 255, .6)}\r\n`;\r\n\r\nSwiperCore.use([Pagination]);\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => (\r\n    loading ? (\r\n        <>\r\n        <Helmet>\r\n            <title>Loading | Nomfilx Official</title>\r\n        </Helmet>\r\n        <Loader />\r\n        </>\r\n    ): (\r\n        error ? <Message text={error} color=\"#e74c3c\" /> : (\r\n        <Container>\r\n            <Helmet>\r\n                <title>{result.original_title ? result.original_title : result.original_name} | Nomfilx Official</title>\r\n            </Helmet>\r\n            <HeadContent>\r\n                <Backdrop bgImage={result.backdrop_path ? `https://image.tmdb.org/t/p/original${result.backdrop_path}` : `https://image.tmdb.org/t/p/original${result.poster_path}`} />\r\n                <Data><DataInner>\r\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                    <ItemContainer>\r\n                        <Item>{result.release_date ? result.release_date.substring(0, 4) : `${result.first_air_date.substring(0, 4)}-${result.last_air_date.substring(0, 4)}`}</Item>\r\n                        <Item>{result.runtime ? `${result.runtime} min` : `${result.number_of_seasons} seasons`}</Item>\r\n                        <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `)}</Item>\r\n                        <Item className=\"link-imdb\"><a href={`https://www.imdb.com/title/${result.imdb_id}`} target=\"_blank\" title=\"new\"><img src={iconImdb}/></a></Item>\r\n                    </ItemContainer>\r\n                    <ItemContainer>\r\n                        <Item>{result.production_countries.map((country, index) => index === result.production_countries.length - 1 ? country.name : `${country.name} / `)}</Item>\r\n                    </ItemContainer>\r\n                    <Overview>{result.overview}</Overview>\r\n                    </DataInner></Data>\r\n            </HeadContent>\r\n            <SubContent>\r\n                <div className=\"sub-section\">\r\n                { result.videos.results.length > 0 ? (\r\n                    <>\r\n                    <SubTitle>Videos</SubTitle>\r\n                    <Swiper\r\n                        loop={false}\r\n                        spaceBetween={50}\r\n                        slidesPerView={3}\r\n                        pagination={true}\r\n                    >\r\n                        {result.videos.results.map((video, index) => (\r\n                            <SwiperSlide key={index}><Video><iframe src={`https://www.youtube.com/embed/${video.key}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe></Video></SwiperSlide>\r\n                        ))}\r\n                    </Swiper>\r\n                    </>\r\n                ) : null}\r\n                </div>\r\n                <div className=\"sub-section\">\r\n                { result.created_by && result.created_by.length > 0 ? (\r\n                    <>\r\n                    <SubTitle>Creators</SubTitle>\r\n                    <Creators>\r\n                        {result.created_by.map((creator, index) => (\r\n                            <Creator key={index} profileImage={creator.profile_path ? `https://image.tmdb.org/t/p/original${creator.profile_path}` : require(\"../../assets/noPosterSmall.png\").default}>{creator.name}</Creator>\r\n                        ))}\r\n                    </Creators>\r\n                    </>\r\n                ) : null}\r\n                </div>\r\n                <div className=\"sub-section\">\r\n                { result.production_companies.length > 0 ? (\r\n                    <CompanyContainer>\r\n                        <SubTitle>Production Companies</SubTitle>\r\n                        <Companies>\r\n                            {\r\n                                result.production_companies.map((company, index) => (\r\n                                    <Company key={index} logoimage={company.logo_path ? `https://image.tmdb.org/t/p/original${company.logo_path}` : null}><span>{company.name}</span></Company>\r\n                                ))\r\n                            }\r\n                        </Companies>\r\n                    </CompanyContainer>\r\n                ) : null }\r\n                </div>\r\n                <div className=\"sub-section\">\r\n                { result.seasons ? (\r\n                    <>\r\n                    <SubTitle>Seasons</SubTitle>\r\n                    <Seasons>\r\n                        {result.seasons.map((season, index) => (\r\n                            <Season key={index}>\r\n                                <img src={`https://image.tmdb.org/t/p/original${season.poster_path}`} />\r\n                                <p>{season.name} {season.air_date === null ? `(${season.air_date})` : `(${season.air_date.substring(0, 4)})`}</p>\r\n                            </Season>\r\n                        ))}\r\n                    </Seasons>\r\n                    </>\r\n                ) : null}\r\n                </div>\r\n            </SubContent>\r\n        </Container>\r\n        )\r\n    )\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Section.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Loader.js",["131"],"import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw; height:100vh; text-align:center;\r\n`;\r\nconst LoadFrame = keyframes`\r\n    0% {\r\n        transform: rotate(0);\r\n        animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\r\n    }\r\n    50% {\r\n        transform: rotate(900deg);\r\n        animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\r\n    }\r\n    100% {\r\n        transform: rotate(1800deg);\r\n    }\r\n`;\r\nconst Load = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top:200px;\r\n    width: 20px;\r\n    height: 20px;\r\n    &:after {\r\n        content: \" \";\r\n        display: block;\r\n        border-radius: 50%;\r\n        width: 0;\r\n        height: 0;\r\n        margin: 8px;\r\n        box-sizing: border-box;\r\n        border: 32px solid #fff;\r\n        border-color: #fff transparent #fff transparent;\r\n        animation: ${LoadFrame} 1.2s infinite;\r\n    }\r\n`;\r\n\r\nexport default () => <Container><Load role=\"img\" aria-label=\"loading\"><div></div><div></div></Load></Container>","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Message.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Poster.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Wrapper.js",["132"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    margin-left:50px; padding:50px 20px 100px\r\n`;\r\n\r\nexport default Wrapper;","C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\Footer.js",[],"C:\\Users\\Sunwha\\Documents\\PERSONAL\\nomflix\\src\\Components\\PageIntro.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":10,"column":1,"nodeType":"139","endLine":25,"endColumn":2},{"ruleId":"140","severity":1,"message":"141","line":45,"column":46,"nodeType":"142","endLine":45,"endColumn":60},{"ruleId":"140","severity":1,"message":"141","line":46,"column":48,"nodeType":"142","endLine":46,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":47,"column":52,"nodeType":"142","endLine":47,"endColumn":72},{"ruleId":"137","severity":1,"message":"143","line":5,"column":1,"nodeType":"139","endLine":43,"endColumn":2},{"ruleId":"137","severity":1,"message":"143","line":5,"column":1,"nodeType":"139","endLine":43,"endColumn":2},{"ruleId":"137","severity":1,"message":"143","line":5,"column":1,"nodeType":"139","endLine":82,"endColumn":2},{"ruleId":"144","severity":1,"message":"145","line":68,"column":72,"nodeType":"146","messageId":"147","endLine":68,"endColumn":82},{"ruleId":"144","severity":1,"message":"148","line":68,"column":84,"nodeType":"146","messageId":"147","endLine":68,"endColumn":96},{"ruleId":"144","severity":1,"message":"149","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":49,"column":65,"nodeType":"152","messageId":"153","endLine":49,"endColumn":67},{"ruleId":"137","severity":1,"message":"143","line":5,"column":1,"nodeType":"139","endLine":53,"endColumn":2},{"ruleId":"144","severity":1,"message":"149","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":143,"column":53,"nodeType":"142","endLine":143,"endColumn":138},{"ruleId":"156","severity":1,"message":"157","line":143,"column":138,"nodeType":"142","endLine":143,"endColumn":159},{"ruleId":"158","severity":1,"message":"159","line":163,"column":61,"nodeType":"142","endLine":163,"endColumn":249},{"ruleId":"156","severity":1,"message":"157","line":202,"column":33,"nodeType":"142","endLine":202,"endColumn":105},{"ruleId":"137","severity":1,"message":"138","line":40,"column":1,"nodeType":"139","endLine":40,"endColumn":112},{"ruleId":"144","severity":1,"message":"160","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-pascal-case","Imported JSX component $Link must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Unexpected default export of anonymous class","no-unused-vars","'updateTerm' is assigned a value but never used.","Identifier","unusedVar","'clickKeyword' is assigned a value but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]